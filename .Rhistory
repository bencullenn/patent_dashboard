knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(igraph)
library(networkD3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(igraph)
library(networkD3)
filelist <- list.files(path = "/Users/bencullen/Documents/STRAT 490R - Winter", pattern = "*.csv")
data_list <- lapply(filelist, read_csv)
# Drop dataframes that don't work
cleaned_data_list <- data_list[-c(1,2,3,8,9,20,21,24,27,29,30,31,36)]
# Create a unique list of all verticies
all_data <- do.call(rbind, cleaned_data_list)
#Sort the dataset by connection name
all_date <- all_data |> arrange(CONNECTION_NAME)
#Clean up connection names
all_dataSCONNECTION_NAME <-
str_to_title(str_trim(str_replace_all(all_data$CONNECTION_NAME, "[^[:alnum:]]", " ")))
all_data$CLASSMATE_NAME <- str_to_title(str_trim(str_replace_all(all_data$CLASSMATE_NAME,
"[^[:alnum:]]", " ")))
# Create vertices
vertex_list1 <- all_data |> distinct(CLASSMATE_NAME) |> rename(NAME = CLASSMATE_NAME)
vertex_list1$COMPANY_NAME <- "BYU STRAT 490R"
vertex_list2 <- all_data |>
distinct (CONNECTION_NAME, .keep_all = TRUE) |>
rename (NAME = CONNECTION_NAME) |>
select (NAME, COMPANY_NAME)
vertex_list <- rbind(vertex_list1, vertex_list2)
vertex_list <- vertex_list |>
distinct(NAME, .keep_all = TRUE) |>
arrange(NAME) |>
rowid_to_column("ID") |>
select(NAME, ID, COMPANY_NAME)
# Create edges
LI_EDGES <- all_data |> arrange(CONNECTION_NAME) |> select(CLASSMATE_NAME, CONNECTION_NAME, WEIGHT, DATE_CONNECTED)
# Create graph object from edgelist
LI_graph <- igraph::graph_from_data_frame(LI_EDGES,vertices = vertex_list, directed = FALSE)
LI_graph
links <- left_join(LI_EDGES, vertex_list, by = c("CLASSMATE_NAME" = "NAME")) |>
select(CLASSMATE_NAME, CONNECTION_NAME, WEIGHT, ID) |>
rename(CLASSMATE_NAME_ID = ID) |>
mutate(CLASSMATE_NAME_ID = CLASSMATE_NAME_ID -1)
links <- left_join(links, vertex_list, by = c("CONNECTION_NAME" = "NAME")) |>
select(CLASSMATE_NAME, CONNECTION_NAME, CLASSMATE_NAME_ID, ID, WEIGHT) |>
rename(CONNECTION_NAME_ID = ID) |>
mutate(CONNECTION_NAME_ID = CONNECTION_NAME_ID -1)
deg <- as.data.frame(degree(LI_graph, mode="all")) %>%
setNames("DEGREE") %>%
rownames_to_column("NAME") %>%
rename("DEGREE" = "DEGREE")
vertex_list <- left_join(vertex_list, deg, by = join_by(NAME))
vertex_list$inclass <- ifelse(vertex_list$NAME %in% c("Scott Murff", vertex_list1$name), 1, 0)
V(LI_graph)$group <- ifelse(V(LI_graph)$name %in% all_data$CLASSMATE_NAME, 1, 0)
linkedin_d3 <- networkD3::igraph_to_networkD3(LI_graph, group = V(LI_graph)$group)
linkedin_d3$links$WEIGHT <- all_data$WEIGHT
# Run a force network visualization of the karate graph in networkD3
networkD3::forceNetwork(Links = links,
Nodes = vertex_list,
NodeID = "NAME",
Source = "CLASSMATE_NAME_ID",
Target = "CONNECTION_NAME_ID",
Group = "inclass",
Value = "WEIGHT",
Nodesize = "DEGREE",
linkDistance = JS("function(d){return 1/d.value * 100}"),
opacity = 1,
height = 2200,
width = 2500,
charge = -7,
zoom = T)
# Load in everyone's data frames
# Read in and clean up all student shared
setwd("/Users/bencullen/Documents/STRAT 490R - COMPLETE LI NETWORKS")
# Load in everyone's data frames
# Read in and clean up all student shared
filelist <- list.files(path ="/Users/bencullen/Documents/STRAT 490R - COMPLETE LI NETWORKS", pattern = "*.csv")
data_list <- lapply(filelist, function(x) {
# Read in the file
df <- read.csv(x)
# Add a new column with the source file name
df$SOURCE_FILE <- x
# Return the modified dataframe
return(df)
})
samples_filelist <- list.files(path = "/Users/bencullen/Documents/STRAT 490R - Winter", pattern = "*.csv")
data_list <- lapply(samples_filelist, read_csv)
data_list <- lapply(filelist, function(x) {
# Read in the file
df <- read.csv(x)
# Add a new column with the source file name
df$SOURCE_FILE <- x
# Return the modified dataframe
return(df)
})
# Load in everyone's data frames
# Read in and clean up all student shared
setwd("/Users/bencullen/Documents/STRAT 490R - COMPLETE LI NETWORKS")
filelist <- list.files(path ="/Users/bencullen/Documents/STRAT 490R - COMPLETE LI NETWORKS", pattern = "*.csv")
data_list <- lapply(filelist, function(x) {
# Read in the file
df <- read.csv(x)
# Add a new column with the source file name
df$SOURCE_FILE <- x
# Return the modified dataframe
return(df)
})
wd
getwd()
knitr::opts_chunk$set(echo = TRUE)
# Load in everyone's data frames
setwd("/Users/bencullen/Projects/Linkedin_Network/STRAT 490R - COMPLETE LI NETWORKS")
filelist <- list.files(path =getwd(), pattern = "*.csv")
data_list <- lapply(filelist, function(x) {
# Read in the file
df <- read.csv(x)
# Add a new column with the source file name
df$SOURCE_FILE <- x
# Return the modified dataframe
return(df)
})
# Combine all files into 1
complete_all_data <- do.call(rbind, data_list)
complete_all_data <- complete_all_data |>
mutate(CONNECTION_NAME = paste(First.Name,Last.Name),
MID_NAME_POS = sapply(str_locate_all(SOURCE_FILE, "[A-Z]"), function(x) x[3]),
BEG_NAME_POS = sapply(str_locate_all(SOURCE_FILE, "_"), function(x) x[1]),
END_NAME_POS = sapply(str_locate_all(SOURCE_FILE, "\\."), function(x) x[1]),
FIRST_NAME = str_sub(SOURCE_FILE,BEG_NAME_POS+1,MID_NAME_POS-1),
LAST_NAME = str_sub(SOURCE_FILE,MID_NAME_POS,END_NAME_POS-1),
CLASSMATE_NAME = paste(FIRST_NAME, LAST_NAME))|>
arrange(NAME) |>
select(CONNECTION_NAME, FIRST_NAME, LAST_NAME, CLASSMATE_NAME, Company, SOURCE_FILE, BEG_NAME_POS, MID_NAME_POS, END_NAME_POS) |>
filter(!(CONNECTION_NAME %in% c('', ' ')))
# Load in everyone's data frames
setwd("/Users/bencullen/Projects/Linkedin_Network/STRAT 490R - COMPLETE LI NETWORKS")
filelist <- list.files(path =getwd(), pattern = "*.csv")
data_list <- lapply(filelist, function(x) {
# Read in the file
df <- read.csv(x)
# Add a new column with the source file name
df$SOURCE_FILE <- x
# Return the modified dataframe
return(df)
})
# Combine all files into 1
complete_all_data <- do.call(rbind, data_list)
for (df in data_list) {
print(colnames(df))
}
# Load in everyone's data frames
setwd("/Users/bencullen/Projects/Linkedin_Network/STRAT 490R - COMPLETE LI NETWORKS")
filelist <- list.files(path =getwd(), pattern = "*.csv")
setwd("/Users/bencullen/Projects/Linkedin_Network/STRAT 490R - Winter")
samples_filelist <- list.files(path = getwd(), pattern = "*.csv")
samples_data_list <- lapply(samples_filelist, read_csv)
setwd("~/Users/bencullen/Projects/Linkedin_Network/STRAT 490R - Winter")
setwd("/Users/bencullen/Projects/Linkedin_Network/STRAT 490R - Winter")
samples_filelist <- list.files(path = getwd(), pattern = "*.csv")
samples_data_list <- lapply(samples_filelist, read_csv)
library(httr)
library(tidyverse)
library(data.table)
library(feather)
# Read downloaded files, filter, and save
# patents file (grant date)
patent <- fread('/Users/bencullen/Projects/Patent Project/Data/g_patent.tsv')
# disambiguated assignee (company name)
assignee <- fread('/Users/bencullen/Projects/Patent Project/Data/g_assignee_disambiguated.tsv')
# application (to calculate expiration date)
application <- fread('/Users/bencullen/Projects/Patent Project/Data/g_application.tsv')
# cpc codes (for heatmap)
cpc <- fread('/Users/bencullen/Projects/Patent Project/Data/g_cpc_current.tsv')
# location
location <- fread('/Users/bencullen/Projects/Patent Project/Data/g_location_disambiguated.tsv')
# cpc codes (for heatmap)
cpc <- fread('/Users/bencullen/Projects/Patent Project/Data/g_cpc_current.tsv')
# Filter
patent <- patent %>% filter(year(patent_date) %in% 2012:2021)
# Filter
patent <- patent %>% filter(year(patent_date) %in% 2012:2021)
assignee <- assignee %>% filter(patent_id %in% patent$patent_id)
term <- term %>% filter(patent_id %in% patent$patent_id)
write.csv(assignee,'data/assignee/g_assignee_disambiguated_2012_2021.csv',row.names = F)
write.csv(cpc,'data/cpc/g_cpc_current_2012_2021.csv',row.names = F)
patent <- fread('data/patent/g_patent_2012_2021.csv')
assignee <- fread('data/assignee/g_assignee_disambiguated_2012_2021.csv')
term <- fread('data/term/g_us_term_of_grant_2012_2021.csv')
application <- fread('data/application/g_application_2012_2021.csv')
cpc <- fread('data/cpc/g_cpc_current_2012_2021.csv')
location <- fread('data/location/g_location_disambiguated_2012_2021.csv')
patent_text <- patent[,c('patent_id','patent_title','patent_abstract')]
write.csv(patent_text,'data/patent/patent_text.csv',row.names = F)
# Rdata
save(patent,file = 'data/patent/g_patent_2012_2021.Rdata')
save(assignee,file = 'data/assignee/_assignee_disambiguated_2012_2021.Rdata')
runApp('/Users/bencullen/Projects/shiny_dashboard')
shiny::runApp('Projects/patent_dashboard')
runApp('Projects/patent_dashboard')
